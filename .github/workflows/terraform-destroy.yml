name: 🗑️ Terraform CI/CD (Destroy)

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Confirmar destroy da infraestrutura?'
        required: true
        default: false
        type: boolean
      environment:
        description: 'Ambiente para destruir'
        required: true
        default: 'dev'
        type: choice
        options:
        - prod

env:
  TF_VERSION: '1.5.0'
  AWS_REGION: 'us-east-1'

jobs:
  # ========================================
  # ETAPA 1: VALIDAÇÃO E PLAN
  # ========================================
  terraform-plan:
    name: '🔍 Terraform Plan & Validate'
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🏗️ Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: 🔐 Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 🚀 Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: 📝 Terraform Format Check
      working-directory: ./terraform
      run: terraform fmt -check 

    - name: ✅ Terraform Validate
      working-directory: ./terraform
      run: terraform validate

    - name: 📋 Terraform Plan (Destroy)
      working-directory: ./terraform
      run: terraform plan -destroy -out=tfplan
      env:
        TF_VAR_aws_region: ${{ env.AWS_REGION }}
        TF_VAR_environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || 'dev') }}
        TF_VAR_public_key: ${{ secrets.SSH_PUBLIC_KEY }}

    - name: 💾 Upload Terraform Plan
      uses: actions/upload-artifact@v4
      with:
        name: terraform-destroy-plan
        path: terraform/tfplan


  # ========================================
  # ETAPA 2: DESTROY DE INFRAESTRUTURA 
  # ========================================
  infrastructure-destroy:
    name: '🗑️ Infrastructure Destroy'
    runs-on: ubuntu-latest
    needs: terraform-plan
    if: |
      github.event.pull_request.merged == true || 
      (github.event_name == 'workflow_dispatch' && github.event.inputs.confirm_destroy == 'true')
       
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4

    - name: 🔐 Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: 🏗️ Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TF_VERSION }}

    - name: 🚀 Terraform Init
      working-directory: ./terraform
      run: terraform init

    - name: 📥 Download Terraform Plan
      uses: actions/download-artifact@v4
      with:
        name: terraform-destroy-plan
        path: terraform/

    - name: 🎯 Execute Terraform Destroy
      working-directory: ./terraform
      run: terraform apply tfplan
      env:
        TF_VAR_aws_region: ${{ env.AWS_REGION }}
        TF_VAR_environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || 'dev') }}
        TF_VAR_public_key: ${{ secrets.SSH_PUBLIC_KEY }}

    - name: ✅ Destroy Complete
      run: |
        echo "🗑️ Infrastructure destroyed successfully!"
        echo "📊 Destroy completed at $(date)"
        echo "🔗 PR: ${{ github.event.pull_request.html_url }}"
        echo "👤 Triggered by: ${{ github.actor }}"
        echo "🌿 Branch: ${{ github.ref_name }}"
        echo "🎯 Environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || 'dev') }}"


  # ========================================
  # ETAPA 3: NOTIFICAÇÃO
  # ========================================
  notification:
    name: '📢 Destroy Notification'
    runs-on: ubuntu-latest
    needs: infrastructure-destroy
    if: always()
    
    steps:
    - name: 📢 Notify Destroy Status
      run: |
        if [ "${{ needs.infrastructure-destroy.result }}" == "success" ]; then
          echo "✅ Infrastructure destroyed successfully!"
          echo "🗑️ All resources have been removed from AWS"
          echo "🔗 PR: ${{ github.event.pull_request.html_url }}"
          echo "👤 Triggered by: ${{ github.actor }}"
          echo "🌿 Branch: ${{ github.ref_name }}"
          echo "🎯 Environment: ${{ github.event.inputs.environment || (github.ref == 'refs/heads/main' && 'prod' || 'dev') }}"
        else
          echo "❌ Infrastructure destroy failed!"
          echo "🔍 Check the logs for more details"
        fi
        
        echo "📊 Job Status: ${{ needs.infrastructure-destroy.result }}"
        echo "⏰ Completed at: $(date)"
